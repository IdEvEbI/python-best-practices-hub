# ruff 配置文件

[tool.ruff]
# 目标 Python 版本
target-version = "py312"

# 排除的目录
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".pytest_cache",
    "build",
    "dist",
]

# 行长度限制
line-length = 88

[tool.ruff.lint]
# 启用的规则集
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

# 忽略的规则
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
# 使用双引号
quote-style = "double"

# 缩进样式
indent-style = "space"

# 跳过魔术尾随逗号
skip-magic-trailing-comma = false

# 行结束符
line-ending = "auto"

# MyPy 类型检查配置
[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

# 排除的目录
exclude = [
    "venv/",
    ".venv/",
    "build/",
    "dist/",
    "__pycache__/",
    ".pytest_cache/",
]

# 忽略缺少导入的模块
[[tool.mypy.overrides]]
module = "pytest"
ignore_missing_imports = true

# Radon 代码复杂度分析配置
[tool.radon]
# 排除的目录
exclude = [
    "venv",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    ".pytest_cache",
    "tests",
]

# 最小复杂度显示
min = "A"

# 最大复杂度显示
max = "F"

# 显示复杂度分数
show_complexity = true

# 显示平均复杂度
total_average = true

# 输出格式
output_format = "text"

# 包含 Jupyter 笔记本
include_ipynb = false

# Jupyter 单元格分析
ipynb_cells = false

# Vulture 死代码检测配置
[tool.vulture]
# 排除的路径模式
exclude = [
    "venv",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    ".pytest_cache",
    "tests",
]

# 忽略的装饰器
ignore_decorators = [
    "@app.route",
    "@require_*",
    "@pytest.fixture",
    "@click.command",
]

# 忽略的名称模式
ignore_names = [
    "visit_*",
    "do_*",
    "test_*",
    "_*",
]

# 最小置信度
min_confidence = 80

# 按大小排序
sort_by_size = true

# 详细输出
verbose = false

# Bandit 安全扫描配置
[tool.bandit]
# 排除的目录
exclude_dirs = [
    "venv",
    ".venv",
    "build",
    "dist",
    "__pycache__",
    ".pytest_cache",
]

# 跳过测试文件中的 assert 检查
skips = ["B101"]

# Commitizen 提交信息规范配置
[tool.commitizen]
name = "cz_conventional_commits"
version = "1.0.0"
tag_format = "v$version"
version_scheme = "pep440"
version_provider = "pep621"
update_changelog_on_bump = true
major_version_zero = true
annotated_tag = false
message_template = "chore(release): version $current_version → $new_version"
commit_message_template = "chore(release): version $current_version → $new_version"
